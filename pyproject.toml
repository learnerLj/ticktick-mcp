[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ticktick-mcp"
version = "0.1.0"
description = "Model Context Protocol (MCP) server for TickTick task management"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Jaesung Park", email = "parkjs814@gmail.com" }
]
maintainers = [
    { name = "Jaesung Park", email = "parkjs814@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Scheduling",
]
keywords = ["ticktick", "mcp", "task-management", "productivity"]
requires-python = ">=3.10"
dependencies = [
    "mcp[cli]>=1.2.0,<2.0.0",
    "python-dotenv>=1.0.0,<2.0.0", 
    "requests>=2.30.0,<3.0.0",
]

[project.urls]
Homepage = "https://github.com/parkjs814/ticktick-mcp"
Repository = "https://github.com/parkjs814/ticktick-mcp"
Issues = "https://github.com/parkjs814/ticktick-mcp/issues"

[project.scripts]
ticktick-mcp = "ticktick_mcp.cli:main"
ticktick-auth = "ticktick_mcp.authenticate:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "types-requests>=2.30.0",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "mcp.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"